// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client  {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("MONGO_URI_BOT")
}





model User{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String 
  image String?
  email String? @unique
  emailVerified DateTime?
  hashedPassword String?
  createdAt DateTime @default(now())
  updateAt DateTime @updatedAt 
  sessions Session[]
  accounts Account[]

}

model Account{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @db.ObjectId
  type String
  provider String
  providerAccountId String 
  refresh_token String? @db.String
  access_token String? @db.String
  expires_at Int?
  token_type String?
  scope String?
  id_token String? @db.String
  session_state String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])

}


model Session {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String @unique 
  userId String @db.ObjectId
  expires DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}


model VerificationToken {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token String @unique 
  expires DateTime 

  @@unique([identifier, token]) 
}



model Guild {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  guildId           String              @unique
  FormEntry         FormEntry?          @relation
  ticketConfig      TicketConfig?       @relation
  lobbyConfig       LobbyConfig?        @relation
  customStatus      CustomStatusRole?   @relation
}

model CustomStatusRole {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  statusTerms String[]
  roleIds     String[]
  warnChannelId String?

  guildId     String     @unique
  guild       Guild      @relation(fields: [guildId], references: [guildId])
  
  @@map("CustomStatusRoles")
}

model FormEntry {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  formChannelId        String?
  rolesMemberApproved  String[]
  rolesVerification    String[]

  guildId     String     @unique
  guild       Guild      @relation(fields: [guildId], references: [guildId])
}

model LobbyConfig {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  lobbyCommandImage  String?

  guildId     String     @unique
  guild       Guild      @relation(fields: [guildId], references: [guildId])
}

model TicketConfig {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  ticketCategoryId String?

  guildId     String     @unique
  guild       Guild      @relation(fields: [guildId], references: [guildId])
}
